//Homework 10
//2.logika

//YOU DO THIS
//Add logic blocks in the sumUp function and the test code
//When you finish, the assert statements should be verified

//You will need to prove the precondition before ANY function call
//(recursive or otherwise) and prove the postcondition by the end
//of the function. Be sure to use what you know about proving if/else
//statements to show the postcondition holds in BOTH branches of the function.

//You can use the postcondition after a function call in the test code
//to help prove the next assert statement.

//You should not make any changes other than adding logic blocks

import org.sireum.logika._

def sumUp(n: Z): Z = {
    l"""{
        requires n >= 1             //precondition
        ensures result == n*(n+1)/2 //postcondition
    }"""

    var answer: Z = 0

    if (n == 1)  {
        answer = 1

    } else {

        answer = sumUp(n-1)

        answer = answer + n

    }

    return answer


//////////// Test code (asserts should hold when you finish) /////////////

var num: Z = 4

val sumTo4: Z = sumUp(num)
print("The sum from 1 up to 4 is ", sumTo4)

assert(sumTo4 == 10)

num = 5

val sumTo5: Z = sumUp(num)
print("The sum from 1 up to 5 is ", sumTo5)

assert(sumTo5 == 15)